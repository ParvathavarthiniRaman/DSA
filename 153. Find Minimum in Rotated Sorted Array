#find the pivot 
# Binary Search 
# update the res value based on the pointer min 
# keep checking the middle value and the pointer
class Solution:
    def findMin(self, nums: List[int]) -> int:
        res = nums[0]
        l,r=nums[0], len(nums) -1
        while l <= r :
            if nums[l]< nums[r]:
                res = min(res,nums[l])
                break
            m= l+r //2
            res=min(res,nums[m])
            if nums[m] >= nums[l]:
                l =m+1
            else :
                r= m-1
        return res


