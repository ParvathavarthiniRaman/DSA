class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        q=deque()
        nrow=len(grid)
        ncol=len(grid[0])
        time =0 
        fresh =0 
        for i in range(nrow):
            for j in range(ncol):
                if grid[i][j] == 2 :
                    q.append([i,j])
                if grid[i][j] == 1:
                    fresh+=1
        directions = [[0,1],[0,-1],[1,0],[-1,0]]
        while fresh > 0 and q :
            for val in range(len(q)):
                row,col = q.popleft()
                for m,n in directions:
                    row1,col1 = row+m,col+n
                     # If the adjacent cell has a fresh orange, rot it.
                    if 0 <= row1 < nrow and 0 <= col1 < ncol and grid[row1][col1] == 1:
                        q.append([row1,col1])
                        grid[row1][col1] = 2
                        fresh-=1
            time+=1
        return time if fresh ==0 else -1

